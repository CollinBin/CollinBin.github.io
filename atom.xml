<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Collin&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-05T07:06:04.211Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Collin Song</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建 Hexo-Next 那点儿事</title>
    <link href="http://yoursite.com/2019/09/04/%E6%90%AD%E5%BB%BAHexo-Next%E9%82%A3%E7%82%B9%E5%84%BF%E4%BA%8B/"/>
    <id>http://yoursite.com/2019/09/04/搭建Hexo-Next那点儿事/</id>
    <published>2019-09-04T07:26:18.000Z</published>
    <updated>2019-09-05T07:06:04.211Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h1><h2 id="一、通过-Homebrew-安装-node（推荐）"><a href="#一、通过-Homebrew-安装-node（推荐）" class="headerlink" title="一、通过 Homebrew 安装 node（推荐）"></a>一、通过 Homebrew 安装 node（推荐）</h2><h3 id="1、安装-Homebrew"><a href="#1、安装-Homebrew" class="headerlink" title="1、安装 Homebrew"></a>1、安装 Homebrew</h3><ul><li><p>可以通过 <code>brew -v</code> 来查看是否安装了 Homebrew，如果能正确显示 Homebrew 的版本号，说明 Homebrew 已安装</p><p>  <img src="/images/1.png" alt></p></li><li><p>如果没有安装 Homebrew，通过终端命令安装</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><h3 id="2、安装-node"><a href="#2、安装-node" class="headerlink" title="2、安装 node"></a>2、安装 node</h3><ul><li>在终端中输入命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew link node</span><br><span class="line">brew uninstall node</span><br><span class="line">brew install node</span><br></pre></td></tr></table></figure><ul><li><p>验证 node 是否安装成功</p><p>  下发命令 <code>node -v</code>、<code>npm -v</code>，能正确显示版本号即表示安装成功</p><p>  <img src="/images/2.png" alt></p></li><li><p>如果没有梯子的话，可以使用阿里的国内镜像进行加速。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><blockquote><p>参考：<strong><a href="https://npm.taobao.org/" target="_blank" rel="noopener">淘宝 NPM 镜像</a></strong></p></blockquote><h2 id="二、通过安装包来安装-node"><a href="#二、通过安装包来安装-node" class="headerlink" title="二、通过安装包来安装 node"></a>二、通过安装包来安装 node</h2><ul><li><p>下载安装包</p><p>  可以从 <strong><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js官方</a></strong> 下载 node 的安装包</p><p>  <img src="/images/3.png" alt></p></li></ul><h3 id="三、删除-node"><a href="#三、删除-node" class="headerlink" title="三、删除 node"></a>三、删除 node</h3><p>如果之前已经安装过 node，再次安装会产生冲突，需要先删除</p><ul><li><p>如果是通过 Homebrew 安装的，下发命令 <code>brew uninstall node</code> 即可；</p></li><li><p>执行命令行 </p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /usr/local/&#123;bin/&#123;node,npm&#125;,lib/node_modules/npm,lib/node,share/man/*/node.*&#125;</span><br></pre></td></tr></table></figure><h1 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h1><p>MAC 上安装 Git 主要有两种方式</p><p>首先，查看电脑上是否安装 Git，终端输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>安装过则会输出 Git 版本号，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ git --version</span><br><span class="line">git version 2.20.1 (Apple Git-117)</span><br></pre></td></tr></table></figure><h2 id="1、通过-Homebrew-安装"><a href="#1、通过-Homebrew-安装" class="headerlink" title="1、通过 Homebrew 安装"></a>1、通过 Homebrew 安装</h2><p>终端输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure><h2 id="2、通过-Xcode-安装"><a href="#2、通过-Xcode-安装" class="headerlink" title="2、通过 Xcode 安装"></a>2、通过 Xcode 安装</h2><p>直接从 AppStore 安装 Xcode，Xcode 集成了 Git，不过默认没有安装，你需要运行 Xcode，选择菜单 <code>&#39;Xcode&#39; -&gt; &#39;Preferences&#39;</code>，在弹出窗口中找到 <code>&#39;Downloads&#39;</code>，选择 <code>&#39;Command Line Tools&#39;</code>，点 <code>&#39;Install&#39;</code> 就可以完成安装了。</p><h2 id="3、设置-username-和-email"><a href="#3、设置-username-和-email" class="headerlink" title="3、设置 username 和 email"></a>3、设置 username 和 email</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;xxx&quot;</span><br><span class="line">git config --global user.email &quot;xxx@gmail.com&quot;</span><br></pre></td></tr></table></figure><h2 id="4、通过终端命令创建-ssh-key"><a href="#4、通过终端命令创建-ssh-key" class="headerlink" title="4、通过终端命令创建 ssh key"></a>4、通过终端命令创建 ssh key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxx@gmail.com&quot;</span><br></pre></td></tr></table></figure><p>复制 <code>.ssh/id_rsa.pub</code> 文件里的 key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat .ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h2 id="5、登录-GitHub（默认你已经注册了-GitHub-账号），添加-ssh-key，点击-Settings，如图"><a href="#5、登录-GitHub（默认你已经注册了-GitHub-账号），添加-ssh-key，点击-Settings，如图" class="headerlink" title="5、登录 GitHub（默认你已经注册了 GitHub 账号），添加 ssh key，点击 Settings，如图"></a>5、登录 GitHub（默认你已经注册了 GitHub 账号），添加 ssh key，点击 Settings，如图</h2><p><img src="/images/4.png" alt></p><p>点击 <code>New SSH key</code>，如图</p><p><img src="/images/5.png" alt></p><p>添加 <code>key</code>，如图</p><p><img src="/images/6.png" alt></p><h2 id="6、验证"><a href="#6、验证" class="headerlink" title="6、验证"></a>6、验证</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>终端输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ssh -T git@github.com</span><br><span class="line">Hi CollinBin! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>项目建成后，点击 <code>Settings</code>，向下拉到最后有个 <code>GitHub Pages</code>，点击 <code>Choose a theme</code> 选择一个主题。再回到 <code>GitHub Pages</code>，点击 <code>http://xxx.com/xxx.github.io/</code><br> 主页链接，就可以看到自己的网页。</p><h2 id="7、新建-page-项目"><a href="#7、新建-page-项目" class="headerlink" title="7、新建 page 项目"></a>7、新建 page 项目</h2><p>新建一个项目，输入自己的项目名，后面一定要加 <code>.github.io</code>，<code>README</code> 初始化也要勾上，如图：</p><p><img src="/images/7.png" alt></p><h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><ul><li>在合适的位置新建一个文件夹，用来存放博客文件。使用终端进入该目录下，执行命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-cli -g</span><br></pre></td></tr></table></figure><p>安装完后输入 <code>hexo -v</code> 验证是否成功。</p><ul><li><p>然后需要初始化我们的网站，执行 <code>hexo init</code> 初始化，输入 <code>npm install</code> 安装必备的组件。</p></li><li><p>这样本地的网站配置基本就弄好了，输入 <code>hexo g</code> 生成静态网页，然后输入 <code>hexo s</code> 打开本地服务器，如下：</p></li></ul><p><img src="/images/8.png" alt></p><blockquote><p>注意：由于我安装 NexT 主题，终端执行后显示有所区别。后面章节会讲解到 NexT 主题。</p></blockquote><ul><li>然后浏览器打开 <strong><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></strong> 就可以看到我们的博客了。<br>按 <code>Ctrl+C</code> 关闭本地服务器。</li></ul><h1 id="链接-GitHub-与本地"><a href="#链接-GitHub-与本地" class="headerlink" title="链接 GitHub 与本地"></a>链接 GitHub 与本地</h1><p>打开博客根目录下的 <code>_config.yml</code> 文件，这是博客的配置文件<strong><em>（并非主题的配置文件）</em></strong>，可以在这里面修改与博客有关的相关信息。</p><p>修改最后一行的配置，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:xxx/xxx.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><blockquote><p>注意：冒号后有空格，仓库直接复制之前在 GitHub 创建好的仓库地址，尽量使用 SSH key 的，不要使用 HTTPS 的，如下：</p></blockquote><p><img src="/images/9.png" alt></p><h1 id="写文章、发布文章"><a href="#写文章、发布文章" class="headerlink" title="写文章、发布文章"></a>写文章、发布文章</h1><ul><li>安装一个扩展，终端定位到博客根目录下，执行命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><ul><li>新建文章，执行命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;article title&quot;</span><br></pre></td></tr></table></figure><p>打开 <code>./source/_posts</code> 的目录，可以发现下面多了一个 <code>.md</code> 文件，这就是刚才创建的文章文件。</p><p>编写完 Markdown 文件后，根目录下执行 <code>hexo g</code> 生成静态网页，然后输入 <code>hexo s</code> 可以预览本地效果，最后执行 <code>hexo d</code> 上传到 GitHub 上。或者可以直接执行 <code>hexo g -d</code> 生成并且上传。这时打开你的 <code>http://xxx.com/xxx.github.io/</code> 主页就能看到发布的文章了。</p><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>现在默认的域名还是 <code>xxx.github.io</code> ，如果想弄个专属的域名，首先你得先去买一个域名，xx云等等的都能买，看个人喜好了。</p><p>配置 DNS 推荐使用 DNSPOD 的服务，使用国外的 DNS 解析服务可能有被墙的风险。</p><p>首先在域名供应商处修改 DNS 服务器为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f1g1ns1.dnspod.net.</span><br><span class="line">f1g1ns2.dnspod.net.</span><br></pre></td></tr></table></figure><p>然后到 DNSPOD 进行域名解析，向 DNS 配置中添加 3 条记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@          A             192.30.252.153</span><br><span class="line">@          A             192.30.252.154</span><br><span class="line">www      CNAME           xxx.github.io.</span><br></pre></td></tr></table></figure><blockquote><p>xxx 替换成自己的 GitHub 主页名称</p></blockquote><p>对DNS的配置不是立即生效的，过10分钟可以再去访问的域名看看有没有配置成功。</p><p>然后打开 GitHub 博客项目，点击 <code>Settings</code>，拉到下面 <code>Custom domain</code> 处，填上你自己的域名，保存：</p><p><img src="/images/10.png" alt></p><p>这时博客的项目根目录应该会出现一个名为 <code>CNAME</code> 的文件了。如果没有的话，打开本地博客 <code>/source</code> 目录，新建 <code>CNAME</code> 文件，注意没有后缀。然后在里面写上你的域名，不加 <code>www</code>，保存。最后运行 <code>hexo g -d</code> 上传到GitHub，这样就不会每次发布之后，GitHub Page 里的 <code>Custom domain</code> 都被重置掉了。</p><h1 id="Hexo-多终端发布"><a href="#Hexo-多终端发布" class="headerlink" title="Hexo 多终端发布"></a>Hexo 多终端发布</h1><p>网站的部署其实就是生成静态文件，hexo 下所有生成的静态文件都会放在 <code>public/</code> 文件夹中，所有的 deploy 其实就是将 <code>public/</code> 文件夹中的内容上传到 Git 仓库。</p><h2 id="换了电脑、想多终端发布博客怎么办？"><a href="#换了电脑、想多终端发布博客怎么办？" class="headerlink" title="换了电脑、想多终端发布博客怎么办？"></a>换了电脑、想多终端发布博客怎么办？</h2><p>在 <code>guthub.io</code> 的仓库下创建一个分支来管理</p><ol><li>克隆仓库到本地</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:xxx.github.io.git</span><br></pre></td></tr></table></figure><ol start="2"><li><p>删除文件夹里除了 <code>.git</code> 的其他所有文件</p></li><li><p>创建一个叫 <code>hexo</code>（或者 <code>blog</code>，名字随意）的分支，并切换到这个分支</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure><ol start="4"><li><p>把之前本地博客文件夹内的所有文件全部复制到 <code>hexo</code> 分支的本地目录下</p></li><li><p>添加文件，推送到远程仓库</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 添加所有文件到暂存区</span><br><span class="line">git add --all</span><br><span class="line"></span><br><span class="line"># 提交</span><br><span class="line">git commit -m &quot;&quot;</span><br><span class="line"></span><br><span class="line"># 推送 hexo 分支的文件到 GitHub 仓库</span><br><span class="line">git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure><ol start="6"><li>如果更新博客，先执行 Git 三部曲：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add all</span><br><span class="line">git commit -m &quot;&quot;</span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure><p>然后执行 <code>hexo g -d</code> 部署到远程</p><ol start="7"><li>今后如果换电脑或者多终端更新博客时，配置好基本环境后<strong><em>（Node、npm、Git、Hexo）</em></strong>，然后克隆 hexo 分支<strong><em>（也可以在 GitHub 上将默认分支改为 hexo 分支）</em></strong>，安装依赖 <code>npm install</code>。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b hexo git@github.com:xxx.github.io.git</span><br></pre></td></tr></table></figure><h2 id="综上所述"><a href="#综上所述" class="headerlink" title="综上所述"></a>综上所述</h2><ul><li><p>新建博客 <code>hexo new post “你好，hexo”</code> ，然后去 <code>source/posts/</code> 编辑文章。</p></li><li><p>以后每次写完博客，通过 <code>hexo g -d</code> 发布博客，然后通过 git 三部曲 <code>git add .</code>；<code>git commit -m “注释”</code> ；<code>git push origin hexo</code> 推送到 GitHub 上即可。</p></li></ul><h1 id="安装-NexT-主题"><a href="#安装-NexT-主题" class="headerlink" title="安装 NexT 主题"></a>安装 NexT 主题</h1><p>NexT 主题的安装方式非常简单</p><ul><li>下载主题，定位到 Hexo 根目录，终端执行：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><ul><li>启用主题</li></ul><p>打开站点配置文件 <code>_config.yml</code> 找到 <code>theme</code> 字段，将其值更改为 <code>next</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>执行 <code>hexo s</code>，看看效果。</p><ul><li>如果想配置炫酷的网页效果，网上教程有很多，推荐一个比较完整、可读性比较强的文章：<strong><a href="http://ylong.net.cn/hexo_conf.html" target="_blank" rel="noopener">Hexo 博客美化配置</a></strong></li></ul><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><strong><a href="https://zhuanlan.zhihu.com/p/35668237" target="_blank" rel="noopener">超详细Hexo+Github博客搭建小白教程</a></strong></p><p><strong><a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT官网</a></strong></p><p><strong><a href="http://houyimin.cn/2018/09/25/hexo%E5%A4%9A%E7%BB%88%E7%AB%AF%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">hexo多终端发布博客</a></strong></p>]]></content>
    
    <summary type="html">
    
      从毕业到现在也工作了6年多，之前积累东西一直在 Evernote 上，或者工作中随手写在公司 Wiki 上，最近LP封给我“大勤快”这个称号，于是一冲动决定整个像样点儿的独立博客。很多小伙伴应该也想搭建一个自己的博客，网上也有一堆详细的教程。在此，我详细的总结一下我搭建的基于 Hexo-Next 的博客步骤，主要分享一些我的修改经验，帮大家填填坑，更多个性化操作需要大家以后去摸索。（本文基于 MAC 介绍）
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://yoursite.com/tags/NexT/"/>
    
      <category term="GitHub Pages" scheme="http://yoursite.com/tags/GitHub-Pages/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
